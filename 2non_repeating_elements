//============================================================================
// Name        : tworepeating.cpp
// Description : find two non repeating elements in array of 1-n elements
//============================================================================

#include <iostream>
#include <cstdlib>
using namespace std;
//bitwise method
void tworepeat (int a[], int n)
{
	int size,p=a[0];
	size = n-2;
	int x=0,y=0;
	for (int i=1;i<n;i++)
	{
		p ^= a[i];
	}
	for (int i=1;i<size;i++)
	{
		p ^= i;
	}
	int bit = p & ~(p-1);
	for (int i=0;i<n;i++)
	{
		if (a[i]&bit)
		{
			x ^= a[i];
		}
		else
			y ^=a[i];
	}
	for (int i=1;i<=size;i++)
	{
		if (i&bit)
		{
			x ^=i;
		}
		else
			y ^=i;
	}
	cout <<x<<" "<<y;

}
//if modification of original array is allowed
void tworepeat1(int a[],int n)
{
	for(int i=0;i<n;i++)
	{
		if (a[abs(a[i])]>0)
		{
			a[abs(a[i])] = -a[abs(a[i])];
		}
		else
			cout << abs(a[i]) << " ";
	}
}

int main() {
	int a[] = {1,2,3,4,5,6,7,8,9,1,10,2};
	int n = sizeof(a)/sizeof(a[0]);
	tworepeat(a,n);
	return 0;
}
